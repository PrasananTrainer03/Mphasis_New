Object Oriented Programming : 
_______________________________

It is an approach that provides a way of modularizing programming, that 
which can be used to create small partition memory area for both data
and objects, which are to be used as templates for creating copies
of such modules on demand.

Object : 

	An object is a real world entity, that which possess 
3 characterstics known as

	(i) State

	(ii) Behaviour

	(iii) Identity 


OOPS features : 
_______________


	(i) Encapsulation

		Wrapping up of data and functions into a single
	unit known as Encapsulation. 

		We have to bind data to the existing context. 

	(ii) Abstraction

		Hiding the internal details of an object, that do not contribute
			to its essential context. 

	*** Encapsulation focuses on showing the relevant details, where abstraction focuses on hiding
		the irrelevant details ***

	(iii) Inheritance : Deriving a new entity from already existing entity. Through inheritance, we 
		can reduce the size of the program. 

	(iv) Polymorphism : The ability to take more than one form known as polymorphism. 
		
class : A class is a template or blueprint, that which contains combination of data members and member functions. Members of the class can be accessable by using instance of the class. 

class class_name
{
     data members;
     member functions;
}

Why Java : 
___________

	1) Platform Independence : Write Once and Run Anywhere 

	2) Console

	   Windows

	   Web
		
	   Mobile App

         3) Packages : Package contains group of related classes and interfaces that which belongs to
		one common group. If you want to overcome the naming conflicts between classes, then we 
		need the help of packages. 


Java Features : 
_________________


	(i) Simple

		Java uses simple C/C++ syntaxes, as a programmer no needs to take care of internal details 
	like memory management etc... as how much memory allocated to run the program, the same amount of 
	memory will be reallocated automatically. 

	(ii) Object Oriented

		Java supports all object oriented programming features. 

	(iii) Compiled and Interpreted

		Java programs are compiled first, during compilation java code will be converted into bytecode,
	then .class file will be created. In interpretation, it reads the bytecode line by line and executes. 

	(iv) Portable 

		Ability to run the program without changing the source code, java programs are programs that 
	can run on any environment without changing the source code. 

	(v) Securable

		Java implements different levels of security, as 

		    (a) Compiler Level

		    (b) Bytecode Level

		    (c) Class Loader Level

	(vi) Distributed 

		By using java, we can implement all distributed and robust applications. 


Java Architecture : 
___________________

	(i) Java Program

		Java code, that which stored with extension .java

	(ii) Java Class

		Java code after compilation its converted into bytecode, then .class file will be created. 

	(iii) JVM (Java Virtual Machine)

		(a) Class Loader

			Used to load all classes that which are required to run the program. There are 2 types
		 of class loaders known as 

			(i) Primordial Class Loader

				Used to load all system classes that which are required to run the program. 

			(ii) Class Loader Objects 

				Used to load all user defined classes which are required to run the program. 

		(b) JIT Compiler (Just-In Time) 

			Used to convert Bytecode into CPU specific format. 

		(c) Execution Manager 

			Contains QUEUE of programs which are ready to run, where we can execute the program.

	*** Before execution, it needs to undergone the security authentication ***

	(iv) Java API 

		It provides runtime env, that which allows you to run the java program. 

		We have JDK and JRE 

Data Types : 
_______________

There are 2 types of data types as 

	(i) Value Types

		int, float, double, char, boolean 

	(ii) Reference Types 

		String, Object and Custom Classes 


What is the default package in java 

java.lang

What is the top level class in java

Object is the top level class in java. 


System.out.println() : Used to display any value or message. 

System -> class

out -> Console 

println() -> method 


System.out.println("Welcome to Java Programming...");


You can define method main() as 

public static void main(String[] args) {
...
...
...
}

Access Modifiers : 
___________________

private : Allows you to access members within the current class. 

public  : Allows you to access members in entire application. 

protected : Allows you to access members within current/derived classes. 

friendly : By default java possess friendly access modifier, allows you to access members within all classes
		of current package. 


You can create an object to the class as 

class_name obj = new class_name();


Control Structures : 
_____________________

	(i) used to define the flow of the programs. 


There are 2 types of control structures 

   (i) Branching 

	if...else : Executes the statements based on the condition. 

		if (condition) {
		   statement(s);
		} else {
		   statement(s);
		}

	switch...case : Used to define the menu driven programs. 

	switch(expr) {
		case expr1 :
		    statement(s);
		    break;
		case expr2 : 
		    statement(s);
		    break;
		case expr3 : 
		    statement(s);
		    break;
		default :
		    statement(s);
		    break;
	}


	Looping Control Structures :
	___________________________

		while loop : 

			This loop executes all the statement(s) repeatedly until the condition remains true,
	if the condition remains false, then it comes out of the loop. For every loop, basically there are 
	3 phases as 

			(i) Initialization

			(ii) Condition

			(iii) Increment/Decrement 

	Initialization performed at the beginning of the loop.

	Condition performed at the conditional part of the loop.

	Increment/Decrement performed before closing the loop. 

	while(condition) {
	statement(s);
	incr/decr;
	}



	


   (ii) Looping 


























		















