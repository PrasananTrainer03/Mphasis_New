Files : 
________

A file is a collection of data, that which allows you to store output
permanently. 

To deal with files, we need the help of 

java.io package. 

File class : 

Allows you to deal with file properties. 

FileReader : used to read the contents of the file w.r.t. Unicode format. 
	
read() : Used to read data char/char and returns the ascii value. 
*** Need to typecast ***

it returns -1 once it reaches the EOF

FileWriter : Allows you to write data into the target file. 

write() : used to write data into the file. 

Drawback with FileReader and FileWriter only deals w.r.t. unicode data. 

But, If you want to make data transfer to be happend w.r.t. bytes format, then we need the help of 

FileInputStream

	read() : used to read data char/char and returns ascii value

FileOutputStream 

	write() : used to write data char/char.


DataOutputStream : used to write primitive data types into the file. 

writeInt()

writeUTF()

writeBoolean()

writeDouble()

ObjectOutputStream() : used to write objects into the file. 

writeObject() : used to write an object.


ObjectInputStream() : used to read objects from the file.

readObject() : used to read the object. 

You can write custom objects into the file, by using Serilizable interface. 

Serilization is the process of writing the custom objects into the file. 






